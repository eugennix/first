#pragma once

int StrLenght(char str[]);
  // длина строки до '\0'

char convert_36_10(char sym);
  // возвращает значение char '0'-'Z'  -> char 0-35 для символов недесятичной СС

void convertToBig(char array[], int len);
  // в массиве array длинное число записанное символами 0..9A..Z
  // преобразуем символы в цифры 0--35 и перевернём порядок цифр 
  // от младших разрядов к старшим

void printBig(char array[], int len);
  // в массиве array длинное число от младших разрядов к старшим
  // преобразуем цифры 0--35 в символы 0..9A..Z и перевернём порядок цифр 

int isBigNum_lessThan(char array[], int len, int NS, int x);
  // если длинное число в массиве меньше X => то возвращает его значение [0...X)
  // иначе -1

int BigDivide(char a[], int a_len, int NS, int divisor);
  // в массиве A длинное число в СС NS (первые a_len элементов в обратном порядке)
  // делим его на divisor результат будет там же (возможно появление 0..0 в старших)
  // возвращает остаток от деления
